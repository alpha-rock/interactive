function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _nonIterableRest(); }

function _nonIterableRest() { throw new TypeError("Invalid attempt to destructure non-iterable instance"); }

function _iterableToArrayLimit(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"] != null) _i["return"](); } finally { if (_d) throw _e; } } return _arr; }

function _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }

/*
Copyright (c) 2018-2019 Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
import * as React from 'react';
import { LocaleContext } from '../locale/index.js'; // Components

import { StyledList, StyledEmptyState } from './styled-components.js';
import OptionList from './option-list.js';
import { getOverrides } from '../helpers/overrides.js'; // Types

export default function Menu(props) {
  var activedescendantId = props.activedescendantId,
      _props$getRequiredIte = props.getRequiredItemProps,
      getRequiredItemProps = _props$getRequiredIte === void 0 ? function (item, index) {
    return {};
  } : _props$getRequiredIte,
      items = props.items,
      noResultsMsg = props.noResultsMsg,
      _props$overrides = props.overrides,
      overrides = _props$overrides === void 0 ? {} : _props$overrides,
      _props$rootRef = props.rootRef,
      rootRef = _props$rootRef === void 0 ? React.createRef() : _props$rootRef,
      _props$focusMenu = props.focusMenu,
      focusMenu = _props$focusMenu === void 0 ? function () {} : _props$focusMenu,
      _props$unfocusMenu = props.unfocusMenu,
      unfocusMenu = _props$unfocusMenu === void 0 ? function () {} : _props$unfocusMenu;

  var _getOverrides = getOverrides(overrides.List, StyledList),
      _getOverrides2 = _slicedToArray(_getOverrides, 2),
      List = _getOverrides2[0],
      listProps = _getOverrides2[1];

  var _getOverrides3 = getOverrides(overrides.Option, OptionList),
      _getOverrides4 = _slicedToArray(_getOverrides3, 2),
      Option = _getOverrides4[0],
      optionProps = _getOverrides4[1];

  var _getOverrides5 = getOverrides(overrides.EmptyState, StyledEmptyState),
      _getOverrides6 = _slicedToArray(_getOverrides5, 2),
      EmptyState = _getOverrides6[0],
      emptyStateProps = _getOverrides6[1];

  return React.createElement(LocaleContext.Consumer, null, function (locale) {
    return React.createElement(List, _extends({
      "aria-activedescendant": activedescendantId || null,
      role: "listbox",
      ref: rootRef,
      onMouseEnter: focusMenu,
      onMouseOver: focusMenu,
      onFocus: focusMenu,
      onBlur: unfocusMenu,
      tabIndex: 0,
      "data-baseweb": "menu"
    }, listProps), !items || !items.length ? React.createElement(EmptyState, emptyStateProps, noResultsMsg || locale.menu.noResultsMsg) : items.map(function (item, index) {
      var _getRequiredItemProps = getRequiredItemProps(item, index),
          disabled = _getRequiredItemProps.disabled,
          isFocused = _getRequiredItemProps.isFocused,
          isHighlighted = _getRequiredItemProps.isHighlighted,
          ref = _getRequiredItemProps.ref,
          _getRequiredItemProps2 = _getRequiredItemProps.resetMenu,
          resetMenu = _getRequiredItemProps2 === void 0 ? function () {} : _getRequiredItemProps2,
          restProps = _objectWithoutProperties(_getRequiredItemProps, ["disabled", "isFocused", "isHighlighted", "ref", "resetMenu"]);

      return React.createElement(Option, _extends({
        key: index,
        item: item,
        overrides: overrides,
        resetMenu: resetMenu,
        role: "option",
        $disabled: disabled,
        ref: ref,
        $isFocused: isFocused,
        $isHighlighted: isHighlighted,
        "aria-selected": isHighlighted && isFocused
      }, restProps, optionProps));
    }));
  });
}