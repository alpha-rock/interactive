"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Paragraph2 = exports.Paragraph1 = exports.Label2 = exports.Label1 = exports.H6 = exports.H5 = exports.H4 = exports.H3 = exports.H2 = exports.H1 = exports.Display = exports.Caption2 = exports.Caption1 = void 0;

var React = _interopRequireWildcard(require("react"));

var _block = _interopRequireDefault(require("../block/block.js"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

// Captions - aka Caption, CaptionLabel
var Caption1 = function Caption1(props) {
  return React.createElement(_block.default, _extends({
    "data-baseweb": "typo-caption1"
  }, props, {
    font: props.font || 'font200',
    color: props.color || 'colorSecondary'
  }));
};

exports.Caption1 = Caption1;

var Caption2 = function Caption2(props) {
  return React.createElement(_block.default, _extends({
    "data-baseweb": "typo-caption2"
  }, props, {
    font: props.font || 'font250',
    color: props.color || 'colorSecondary'
  }));
}; // Display


exports.Caption2 = Caption2;

var Display = function Display(props) {
  return React.createElement(_block.default, _extends({
    "data-baseweb": "typo-display"
  }, props, {
    font: props.font || 'font1100',
    color: props.color || 'colorPrimary'
  }));
}; // Headings


exports.Display = Display;

var H1 = function H1(props) {
  return React.createElement(_block.default, _extends({
    "data-baseweb": "typo-h1",
    as: props.as || 'h1'
  }, props, {
    font: props.font || 'font1000',
    color: props.color || 'colorPrimary'
  }));
};

exports.H1 = H1;

var H2 = function H2(props) {
  return React.createElement(_block.default, _extends({
    "data-baseweb": "typo-h2",
    as: props.as || 'h2'
  }, props, {
    font: props.font || 'font900',
    color: props.color || 'colorPrimary'
  }));
};

exports.H2 = H2;

var H3 = function H3(props) {
  return React.createElement(_block.default, _extends({
    "data-baseweb": "typo-h3",
    as: props.as || 'h3'
  }, props, {
    font: props.font || 'font800',
    color: props.color || 'colorPrimary'
  }));
};

exports.H3 = H3;

var H4 = function H4(props) {
  return React.createElement(_block.default, _extends({
    "data-baseweb": "typo-h4",
    as: props.as || 'h4'
  }, props, {
    font: props.font || 'font700',
    color: props.color || 'colorPrimary'
  }));
};

exports.H4 = H4;

var H5 = function H5(props) {
  return React.createElement(_block.default, _extends({
    "data-baseweb": "typo-h5",
    as: props.as || 'h5'
  }, props, {
    font: props.font || 'font600',
    color: props.color || 'colorPrimary'
  }));
};

exports.H5 = H5;

var H6 = function H6(props) {
  return React.createElement(_block.default, _extends({
    "data-baseweb": "typo-h6",
    as: props.as || 'h6'
  }, props, {
    font: props.font || 'font500',
    color: props.color || 'colorPrimary'
  }));
}; // Labels - aka Label1, Label2


exports.H6 = H6;

var Label1 = function Label1(props) {
  return React.createElement(_block.default, _extends({
    "data-baseweb": "typo-label1"
  }, props, {
    font: props.font || 'font350',
    color: props.color || 'colorPrimary'
  }));
};

exports.Label1 = Label1;

var Label2 = function Label2(props) {
  return React.createElement(_block.default, _extends({
    "data-baseweb": "typo-label2"
  }, props, {
    font: props.font || 'font450',
    color: props.color || 'colorPrimary'
  }));
}; // Paragraphs - Paragraph1, Paragraph2


exports.Label2 = Label2;

var Paragraph1 = function Paragraph1(props) {
  return React.createElement(_block.default, _extends({
    "data-baseweb": "typo-p1",
    as: props.as || 'p'
  }, props, {
    font: props.font || 'font300',
    color: props.color || 'colorPrimary'
  }));
};

exports.Paragraph1 = Paragraph1;

var Paragraph2 = function Paragraph2(props) {
  return React.createElement(_block.default, _extends({
    "data-baseweb": "typo-p2",
    as: props.as || 'p'
  }, props, {
    font: props.font || 'font400',
    color: props.color || 'colorPrimary'
  }));
};

exports.Paragraph2 = Paragraph2;