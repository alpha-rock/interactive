function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

/*
Copyright (c) 2018-2019 Uber Technologies, Inc.

This source code is licensed under the MIT license found in the
LICENSE file in the root directory of this source tree.
*/
import { styled } from '../styles/index.js';
export var Action = styled('div', function (_ref) {
  var typography = _ref.$theme.typography;
  return _objectSpread({}, typography.font450);
});
Action.displayName = "Action";
export var Body = styled('div', function (_ref2) {
  var $theme = _ref2.$theme;
  var colors = $theme.colors,
      sizing = $theme.sizing,
      typography = $theme.typography;
  return _objectSpread({
    marginBottom: sizing.scale600,
    color: colors.foregroundAlt
  }, typography.font300);
});
Body.displayName = "Body";
export var Contents = styled('div', function (_ref3) {
  var $theme = _ref3.$theme;
  var sizing = $theme.sizing;
  return {
    marginLeft: sizing.scale800,
    marginTop: sizing.scale800,
    marginRight: sizing.scale800,
    marginBottom: sizing.scale800
  };
});
Contents.displayName = "Contents";
export var HeaderImage = styled('img', function (_ref4) {
  var borders = _ref4.$theme.borders;
  return {
    borderTopLeftRadius: borders.surfaceBorderRadius,
    borderTopRightRadius: borders.surfaceBorderRadius,
    objectFit: 'contain',
    maxWidth: '100%'
  };
});
HeaderImage.displayName = "HeaderImage";
export var Root = styled('div', function (_ref5) {
  var $theme = _ref5.$theme;
  var borders = $theme.borders,
      lighting = $theme.lighting,
      colors = $theme.colors;
  return _objectSpread({}, borders.border300, {
    boxShadow: lighting.shadow400,
    borderTopLeftRadius: borders.surfaceBorderRadius,
    borderTopRightRadius: borders.surfaceBorderRadius,
    borderBottomLeftRadius: borders.surfaceBorderRadius,
    borderBottomRightRadius: borders.surfaceBorderRadius,
    backgroundColor: colors.backgroundAlt
  });
});
Root.displayName = "Root";
export var Thumbnail = styled('img', function (props) {
  var _props$$theme = props.$theme,
      borders = _props$$theme.borders,
      sizing = _props$$theme.sizing;
  return _objectSpread({
    float: 'right',
    height: sizing.scale2400,
    width: sizing.scale2400,
    objectFit: 'cover',
    borderTopLeftRadius: borders.surfaceBorderRadius,
    borderTopRightRadius: borders.surfaceBorderRadius,
    borderBottomLeftRadius: borders.surfaceBorderRadius,
    borderBottomRightRadius: borders.surfaceBorderRadius
  }, borders.border200, {
    margin: "0 0 ".concat(sizing.scale500, " ").concat(sizing.scale500)
  });
});
Thumbnail.displayName = "Thumbnail";
export var Title = styled('h1', function (_ref6) {
  var $theme = _ref6.$theme;
  var colors = $theme.colors,
      sizing = $theme.sizing,
      typography = $theme.typography;
  return _objectSpread({}, typography.font500, {
    color: colors.foreground,
    fontWeight: 500,
    marginLeft: 0,
    marginTop: 0,
    marginRight: 0,
    marginBottom: sizing.scale300,
    paddingLeft: 0,
    paddingTop: 0,
    paddingRight: 0,
    paddingBottom: 0
  });
});
Title.displayName = "Title";